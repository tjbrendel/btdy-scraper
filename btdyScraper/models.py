from django.conf import settings
from django.db import models
class league(models.Model):
    leagueName = models.CharField(max_length=50)
    leagueOwner = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    leagueUrl = models.CharField(max_length=50)

    def __str__(self):
        return self.leagueName
class series(models.Model):
    seriesName = models.CharField(max_length=50)
    seriesUrl = models.CharField(max_length=50)
    leagueID = models.ForeignKey(league, on_delete=models.CASCADE)
    admins = models.ManyToManyField(settings.AUTH_USER_MODEL)
    pointsConfig = models.CharField(max_length=50)
    payoutFlag = models.IntegerField(default=0)
    bonusFlag = models.IntegerField(default=0)
    payoutConfig = models.CharField(max_length=50)
class raceSession(models.Model):
    subsessionID = models.IntegerField(primary_key=True)
    raceDate = models.CharField(max_length=10)
    trackID = models.IntegerField()
    trackName = models.CharField(max_length=100)
    leadChanges = models.IntegerField()
    totalCautions = models.IntegerField()
    cautionLaps = models.IntegerField()
    greenLaps = models.IntegerField()
    totalLaps = models.IntegerField()
    seriesID = models.ForeignKey(series, on_delete=models.CASCADE, null=True, blank=True)
    season = models.IntegerField()
    roundNum = models.IntegerField()

class points(models.Model):
    driverID = models.IntegerField()
    name = models.CharField(max_length=50)
    startPosition = models.IntegerField()
    finishPosition = models.IntegerField()
    totalLapsLead = models.IntegerField()
    incidents = models.IntegerField()
    finishPoints = models.IntegerField()
    lapsLeadPoints = models.IntegerField()
    mostLapsLeadPoints = models.IntegerField()
    polePoints = models.IntegerField()
    winPoints = models.IntegerField()
    stagePoints = models.IntegerField()
    winFlag = models.IntegerField()
    poleFlag = models.IntegerField()
    stageFlag = models.IntegerField()
    mostLapsLeadFlag = models.IntegerField()
    topFiveFlag = models.IntegerField()
    topTenFlag = models.IntegerField()
    payoutAmount = models.IntegerField()
    subsessionID = models.ForeignKey(raceSession, on_delete=models.CASCADE)
    avgLap = models.IntegerField()
    avgLapFlag = models.IntegerField()
    roundNum = models.IntegerField()
    penalty = models.IntegerField(default=0)
    totalPoints = models.IntegerField(default=0)
    lapsComp = models.IntegerField(default=0)
    penaltyNotes = models.TextField()
    bonusNotes = models.TextField()